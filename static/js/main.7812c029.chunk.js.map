{"version":3,"sources":["components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","todoUser","search","className","map","todo","cn","id","completed","title","type","onClick","userId","TodoFilter","selectAll","selectedTodos","setSelectAll","setSelectedTodos","value","onChange","event","target","placeholder","style","pointerEvents","Loader","TodoModal","loaderTodo","selectedTodo","setSelectedTodo","setTodoUser","href","email","name","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","App","useState","loader","setLoader","setTodos","setLoaderTodo","useEffect","finally","selectTodo","text","trim","toLowerCase","useMemo","filter","tod","includes","getUser","toddo","todoUs","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7812c029.chunk.js","sourcesContent":["import React from 'react';\nimport cn from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  todoUser: Todo | null;\n  search:(userId: number, id: number) => void\n};\n\nexport const TodoList: React.FC<Props> = (\n  {\n    todos,\n    todoUser,\n    search,\n  },\n) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n\n      {todos.map((todo) => (\n        <tr\n          data-cy=\"todo\"\n          className={todoUser !== null\n            ? cn({\n              'has-background-info-light':\n               todoUser.id === todo.id,\n            }) : ''}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={\n              !todo.completed ? 'has-text-danger' : 'has-text-success'\n            }\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                search(todo.userId, todo.id);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={\n                  todoUser !== null\n                    ? cn({\n                      'far fa-eye-slash':\n                       todoUser.id === todo.id,\n                      'far fa-eye':\n                       todoUser.id !== todo.id,\n\n                    })\n                    : 'far fa-eye'\n                }\n                />\n\n              </span>\n            </button>\n          </td>\n        </tr>\n\n      ))}\n\n    </tbody>\n  </table>\n);\n","type Props = {\n  selectAll: string\n  selectedTodos:string\n  setSelectAll: (select: string) => void\n  setSelectedTodos:(select: string) => void\n};\n\nexport const TodoFilter: React.FC<Props> = (\n  {\n    selectAll,\n    selectedTodos,\n    setSelectAll,\n    setSelectedTodos,\n  },\n) => (\n  <form className=\"field has-addons\">\n    <p className=\"control\">\n      <span className=\"select\">\n        <select\n          data-cy=\"statusSelect\"\n          value={selectAll}\n          onChange={(event) => setSelectAll(event.target.value)}\n        >\n          <option value=\"all\">All</option>\n          <option value=\"active\">Active</option>\n          <option value=\"completed\">Completed</option>\n        </select>\n      </span>\n    </p>\n\n    <p className=\"control is-expanded has-icons-left has-icons-right\">\n      <input\n        data-cy=\"searchInput\"\n        type=\"text\"\n        className=\"input\"\n        placeholder=\"Search...\"\n        value={selectedTodos}\n        onChange={(event) => setSelectedTodos(event.target.value)}\n      />\n      <span className=\"icon is-left\">\n        <i className=\"fas fa-magnifying-glass\" />\n      </span>\n\n      {selectedTodos && (\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            data-cy=\"clearSearchButton\"\n            type=\"button\"\n            className=\"delete\"\n            onClick={() => setSelectedTodos('')}\n          />\n        </span>\n\n      )}\n    </p>\n  </form>\n);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  loaderTodo: boolean\n  selectedTodo: User\n  todoUser:Todo | null\n  setSelectedTodo: (result: User | null) => void\n  setTodoUser: (result: Todo | null) => void;\n};\n\nexport const TodoModal: React.FC<Props> = (\n  {\n    loaderTodo,\n    selectedTodo,\n    todoUser,\n    setSelectedTodo,\n    setTodoUser,\n  },\n) => {\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loaderTodo && <Loader />}\n\n      <div className=\"modal-card\">\n        <header className=\"modal-card-head\">\n          <div\n            className=\"modal-card-title has-text-weight-medium\"\n            data-cy=\"modal-header\"\n          >\n            Todo #\n            {todoUser && todoUser.id}\n          </div>\n\n          {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n          <button\n            type=\"button\"\n            className=\"delete\"\n            data-cy=\"modal-close\"\n            onClick={() => {\n              setSelectedTodo(null);\n              setTodoUser(null);\n            }}\n          />\n        </header>\n\n        <div className=\"modal-card-body\">\n          <p className=\"block\" data-cy=\"modal-title\">\n            {todoUser && todoUser.title}\n          </p>\n\n          <p className=\"block\" data-cy=\"modal-user\">\n            {/* <strong className=\"has-text-success\">Done</strong> */}\n            <strong className=\"has-text-danger\">Planned</strong>\n\n            {' by '}\n\n            <a href={selectedTodo.email}>\n              {selectedTodo.name}\n            </a>\n          </p>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promime\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see now the laoder works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { getTodos, getUser } from './api';\nimport { User } from './types/User';\n\nexport const App: React.FC = () => {\n  const [loader, setLoader] = useState(false);\n\n  const [todos, setTodos] = useState<Todo[] >([]);\n  const [selectAll, setSelectAll] = useState('All');\n  const [selectedTodos, setSelectedTodos] = useState('');\n\n  const [loaderTodo, setLoaderTodo] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<User | null>(null);\n  const [todoUser, setTodoUser] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    setLoader(true);\n\n    setTimeout(() => {\n      getTodos()\n        .then(setTodos)\n        .finally(() => setLoader(false));\n    }, 250);\n  }, []);\n\n  const search = (userId:number, id: number) => {\n    setLoaderTodo(true);\n\n    setTimeout(() => {\n      getUser(userId)\n        .then(setSelectedTodo)\n        .finally(() => setLoaderTodo(false));\n      const [todoUs] = todos.filter(toddo => toddo.id === id);\n\n      setTodoUser(todoUs);\n    }, 500);\n  };\n\n  let selectTodo = [...todos];\n  const text = selectedTodos.trim().toLowerCase();\n\n  useMemo(() => {\n    if (selectedTodos) {\n      selectTodo = selectTodo.filter(tod => tod.title.toLowerCase().includes(text));\n    }\n  }, [selectedTodos, selectAll]);\n\n  useMemo(() => {\n    switch (selectAll) {\n      case 'active':\n        selectTodo = selectTodo.filter(tod => tod.completed === true);\n        break;\n\n      case 'completed':\n        selectTodo = selectTodo.filter(tod => tod.completed === false);\n        break;\n\n      default:\n        break;\n    }\n  }, [selectAll, selectedTodos]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                selectAll={selectAll}\n                selectedTodos={selectedTodos}\n                setSelectAll={setSelectAll}\n                setSelectedTodos={setSelectedTodos}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loader && <Loader />}\n              <TodoList\n                todos={selectTodo}\n                todoUser={todoUser}\n                search={search}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          loaderTodo={loaderTodo}\n          selectedTodo={selectedTodo}\n          todoUser={todoUser}\n          setSelectedTodo={setSelectedTodo}\n          setTodoUser={setTodoUser}\n        />\n      )}\n\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}